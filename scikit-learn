# Import libraries
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline

# Sample dataset
data = [
    ("I love this product! It's amazing.", "positive"),
    ("This is the worst experience I've ever had.", "negative"),
    ("I am so happy with the service!", "positive"),
    ("Terrible, just terrible. Not recommended.", "negative"),
    ("Fantastic quality, very impressed.", "positive"),
    ("I hate this, completely useless.", "negative"),
]

# Split data into features and labels
texts, labels = zip(*data)

# Split into training and test sets
X_train, X_test, y_train, y_test = train_test_split(texts, labels, test_size=0.2, random_state=42)

# Create a pipeline with a CountVectorizer and a MultinomialNB classifier
pipeline = Pipeline([
    ('vectorizer', CountVectorizer()),
    ('classifier', MultinomialNB())
])

# Train the model
pipeline.fit(X_train, y_train)

# Test the model
test_text = ["I absolutely love this!", "This is not good at all."]
predictions = pipeline.predict(test_text)

# Output predictions
for text, sentiment in zip(test_text, predictions):
    print(f"Text: {text}\nPredicted Sentiment: {sentiment}\n")

# Evaluate the model
accuracy = pipeline.score(X_test, y_test)
print(f"Model Accuracy: {accuracy:.2f}")
